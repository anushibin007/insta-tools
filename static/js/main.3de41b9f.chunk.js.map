{"version":3,"sources":["components/About.js","utils/Constants.js","components/Navigation.js","components/UserSearch.js","utils/InstaUtils.js","components/DisplayPicture.js","components/RecentSearches.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","show","setShow","handleClose","Fragment","Button","variant","onClick","Modal","onHide","Header","Title","Body","className","href","src","border","alt","Footer","Constants","INSTA_TOOLS_BACKEND_SERVER","APPLICATION_CONTEXT_PATH","LOCALSTORAGE_KEY","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","style","display","UserSearch","props","username","setUsername","addUserNameToHistory","stateFromLocalStorage","localStorage","getItem","recents","JSON","parse","setItem","stringify","Form","onSubmit","event","preventDefault","history","push","FormControl","type","placeholder","onChange","target","value","required","autoFocus","axios","get","DisplayPicture","match","params","dpUrl","setDpUrl","useEffect","InstaUtils","getDpUrl","then","response","data","base64","catch","err","console","log","openImageInNewTab","window","open","document","body","innerHTML","Alert","background","speed","width","height","loop","autoplay","loaderMessage","Image","fluid","RecentSearches","setRecents","Accordion","defaultActiveKey","Card","as","eventKey","Row","Col","ListGroup","map","recent","to","Item","App","Container","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3de41b9f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"../css/heart.css\";\n\nfunction About() {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\n\t\t\t\tAbout Me\n\t\t\t</Button>\n\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>About Me</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\tDesigned & Developed with <span className=\"heart animate__animated animate__heartBeat animate__infinite px-1\">â™¥</span> by{\" \"}\n\t\t\t\t\t\t\t<a className=\"px-1\" href=\"https://github.com/anushibin007/insta-tools\">\n\t\t\t\t\t\t\t\tAnu Shibin Joseph Raj\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\t{/* This line shows the actual counter */}\n\t\t\t\t\t\t\t<img src=\"https://www.freevisitorcounters.com/en/counter/render/838055/t/0\" border=\"0\" className=\"counterimg\" alt=\"Visitor Counter\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"info\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\nexport default About;\n","const Constants = {\n\tINSTA_TOOLS_BACKEND_SERVER: \"https://us-central1-insta-scraper-dcd26.cloudfunctions.net\",\n\tAPPLICATION_CONTEXT_PATH: \"/insta-tools\",\n\tLOCALSTORAGE_KEY: \"INSTA_TOOLS_RECENTS\",\n};\n\nexport default Constants;\n","import \"../css/navbar.css\";\nimport React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport About from \"./About\";\nimport Constants from \"../utils/Constants\";\n\nfunction Navigation() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand href={Constants.APPLICATION_CONTEXT_PATH}>Instagram Tools</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"insta-tools-navbar\" />\n\t\t\t\t<Navbar.Collapse id=\"insta-tools-navbar\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t{/* This line is to make an AJAX call to the counter update function. This will just increment the counter in the background */}\n\t\t\t<img src=\"https://www.freevisitorcounters.com/en/home/counter/838055/t/0\" style={{ display: \"none\" }} alt=\"Visitor Counter Invoker\"></img>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\nimport Constants from \"../utils/Constants\";\n\nconst UserSearch = (props) => {\n\tconst [username, setUsername] = useState(\"\");\n\n\tconst handleFormSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\taddUserNameToHistory();\n\t\tprops.history.push(\"dp/\" + username);\n\t};\n\n\tconst handleUsernameChanged = (event) => {\n\t\tsetUsername(event.target.value);\n\t};\n\n\tconst addUserNameToHistory = () => {\n\t\tconst stateFromLocalStorage = localStorage.getItem(Constants.LOCALSTORAGE_KEY);\n\t\t// append this username to the existing storage\n\t\tif (stateFromLocalStorage) {\n\t\t\tvar recents = JSON.parse(stateFromLocalStorage);\n\t\t\trecents = [...recents, username];\n\t\t\tlocalStorage.setItem(Constants.LOCALSTORAGE_KEY, JSON.stringify(recents));\n\t\t} else {\n\t\t\t// this is the first item\n\t\t\tlocalStorage.setItem(Constants.LOCALSTORAGE_KEY, JSON.stringify([username]));\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Form onSubmit={handleFormSubmit} className=\"d-flex\">\n\t\t\t\t<FormControl type=\"text\" placeholder=\"Enter an Instagram user's username\" onChange={handleUsernameChanged} required autoFocus />\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UserSearch;\n","import Constants from \"./Constants\";\nimport axios from \"axios\";\n\nclass InstaUtils {\n\tgetDpUrl(username) {\n\t\treturn axios.get(Constants.INSTA_TOOLS_BACKEND_SERVER + \"/instascrape/?username=\" + username + \"&part=profile_pic_url_hd&base64=true\");\n\t}\n}\n\nexport default new InstaUtils();\n","import React, { useEffect, useState } from \"react\";\nimport { Alert, Image } from \"react-bootstrap\";\nimport InstaUtils from \"../utils/InstaUtils\";\nimport * as loaderMessage from \"loader-message\";\n\nconst DisplayPicture = (props) => {\n\tconst [username] = useState(props.match.params.username);\n\tconst [dpUrl, setDpUrl] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tInstaUtils.getDpUrl(username)\n\t\t\t.then((response) => {\n\t\t\t\tsetDpUrl(response.data.base64);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\t// error occured\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetDpUrl(\"500\");\n\t\t\t});\n\t}, [username]);\n\n\tconst openImageInNewTab = () => {\n\t\tvar newTab = window.open();\n\t\tnewTab.document.body.innerHTML = `<img src=\"${dpUrl}\" />`;\n\t};\n\n\tconst waitAnimation = () => {\n\t\t//return <ProgressBar animated now={100} />;\n\t\treturn (\n\t\t\t<Alert variant=\"secondary\" className=\"text-center\">\n\t\t\t\t<center>\n\t\t\t\t\t<lottie-player src=\"https://assets9.lottiefiles.com/packages/lf20_X31SKN.json\" background=\"transparent\" speed=\"2\" style={{ width: \"300px\", height: \"300px\" }} loop autoplay></lottie-player>\n\t\t\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{loaderMessage.phrase()}</h3>\n\t\t\t\t</center>\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\t/*const getRandomLoadingMessage = () => {\n\t\tconst options = {\n\t\t\tmin: 0,\n\t\t\tmax: LoadingMessages.messages.length,\n\t\t\tinteger: true,\n\t\t};\n\t\tconst randomNumber = rn(options);\n\t\treturn LoadingMessages.messages[randomNumber];\n\t};*/\n\n\tconst renderDpUrl = () => {\n\t\tif (dpUrl === \"\") {\n\t\t\treturn waitAnimation();\n\t\t} else if (dpUrl === \"500\") {\n\t\t\treturn <Alert variant=\"danger\">There was an error processing DP URL for your request</Alert>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Alert variant=\"secondary\" className=\"text-center\">\n\t\t\t\t\t<button href=\"#\" style={{ border: \"0px\" }}>\n\t\t\t\t\t\t<Image src={dpUrl} fluid onClick={openImageInNewTab} />\n\t\t\t\t\t</button>\n\t\t\t\t</Alert>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Alert variant=\"primary\">Username: {username}</Alert>\n\t\t\t{renderDpUrl()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default DisplayPicture;\n","import React, { useState, useEffect } from \"react\";\nimport { Accordion, Card, Row, Col, Button, ListGroup } from \"react-bootstrap\";\nimport Constants from \"../utils/Constants\";\nimport { Link } from \"react-router-dom\";\n\nconst RecentSearches = () => {\n\tconst [recents, setRecents] = useState([]);\n\n\t/**\n\t * On initial page load, check if the old state is cached in local storage.\n\t * If nothing is found there, just show one empty row by calling the \"reset\" function.\n\t */\n\tuseEffect(() => {\n\t\tconst stateFromLocalStorage = localStorage.getItem(Constants.LOCALSTORAGE_KEY);\n\t\tif (stateFromLocalStorage) {\n\t\t\tsetRecents(JSON.parse(stateFromLocalStorage));\n\t\t}\n\t}, []);\n\n\tconst resetRecents = () => {\n\t\tlocalStorage.setItem(Constants.LOCALSTORAGE_KEY, \"[]\");\n\t\tsetRecents([]);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Accordion defaultActiveKey=\"0\">\n\t\t\t\t<Card>\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<h5>Your Recent Searches</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button variant=\"warning\" onClick={resetRecents} className=\"float-end\">\n\t\t\t\t\t\t\t\t\t<i className=\"bi bi-x-octagon\"></i> Clear\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t\t{recents.map((recent) => (\n\t\t\t\t\t\t\t\t\t<Link to={`dp/${recent}`} key={recent}>\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>{recent}</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default RecentSearches;\n","import \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport { Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"animate.css/animate.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport UserSearch from \"./components/UserSearch\";\nimport DisplayPicture from \"./components/DisplayPicture\";\nimport Constants from \"./utils/Constants\";\nimport RecentSearches from \"./components/RecentSearches\";\n\nfunction App() {\n\treturn (\n\t\t<Container>\n\t\t\t<Navigation />\n\t\t\t<br />\n\t\t\t<Router basename={Constants.APPLICATION_CONTEXT_PATH}>\n\t\t\t\t<Route path=\"/\" exact component={UserSearch} />\n\t\t\t\t<br />\n\t\t\t\t<Route path=\"/\" exact component={RecentSearches} />\n\t\t\t\t<Route path=\"/dp/:username\" component={DisplayPicture} />\n\t\t\t</Router>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}